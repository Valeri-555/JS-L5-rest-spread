                //    * * * * * * –¢–ï–û–†–Ü–Ø * * * * *

// –¥–æ–ø–æ–º–∞–≥–∞—î —Ä–æ–∑–∫—Ä–∏—Ç–∏ html-–µ–ª–µ–º–µ–Ω—Ç —É –≤–∏–≥–ª—è–¥—ñ –æ–±'—î–∫—Ç—É;

//  –º–∏ –∑–∞–≤–∂–¥–∏ –ø–æ–≤–∏–Ω–Ω—ñ –¥—ñ–ª–∏—Ç–∏ html - –∏ –Ω–∞ 2 —Ç–∏–ø–∏:
//  –Ü —Ç–∏–ø - –ö–û–ú–£–ù–Ü–ö–ê–¶–Ü–á (input, button), —Ç–µ —â–æ –º–∏ –≤–≤–æ–¥–∏–º–æ, –≤–∑–∞—î–º–æ–¥—ñ—è
//  –Ü–Ü —Ç–∏–ø - –¢–ï–ö–°–¢–û–í–ò–ô

//console.dir(title.textContent); // —â–æ–± –∑—á–∏—Ç–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –∑ –Ω–∞—à–æ–≥–æ –æ–±'—î–∫—Ç—É, —Ç–æ–±—Ç–æ –≤–∏–ª—É—á–∏—Ç–∏ —Ç–µ–∫—Å—Ç.
//title.textContent = "Hello JS" // –∑–∞ —Ä–∞—Ö—É–Ω–æ–∫ —â–æ —Ü–µ –æ–±'—î–∫—Ç –º–∏ –º–æ–∂–µ–º–æ –π–æ–≥–æ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—Ç–∏

//          * * * * * –°lassList - –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å —è–∫–∞ –∑–±–µ—Ä—ñ–≥–∞—î –≤—Å—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–ª–∞—Å–∏, —è–∫—ñ  –Ω–∞–ª–µ–∂–∞—Ç—å –Ω–∞—à–æ–º—É html - –µ–ª–µ–º–µ–Ω—Ç—É;
// –∑ Js –º–∏ –º–æ–∂–µ–º–æ –º–∞–Ω—ñ–ø—É–ª—é–≤–∞—Ç–∏ –∫–ª–∞—Å–∞–º–∏(–≤–∏–¥–∞–ª—è—Ç–∏, –¥–æ–¥–∞–≤–∞—Ç–∏, –∑–∞–º—ñ–Ω—é–≤–∞—Ç–∏)
// –í–æ–Ω–∞ –º–∞—î 3 –Ω–∞–π—Ä–æ–∑–ø–æ–≤—Å—é–¥–∂–µ–Ω–∏—Ö –º–µ—Ç–æ–¥–∞:
// add - –¥–æ–¥–∞—Ç–∏;
// remove - –≤–∏–¥–∞–ª–∏—Ç–∏;
// toggle - –¥–æ–¥–∞—Ç–∏ —è–∫—â–æ –Ω–µ–º–∞—î, –≤–∏–¥–∞–ª–∏—Ç–∏ —è–∫—â–æ —î;

// title.classList.add('title-color');
// console.log(title);
// title.classList.remove('title-color');
// title.classList.toggle('title-color'); //—è–∫—â–æ —Ç–∞–∫–æ–≥–æ –∫–ª–∞—Å—É –Ω–µ–º–∞—î, –≤—ñ–Ω –π–æ–≥–æ –¥–æ–¥–∞—Å—Ç—å
// title.classList.toggle('title-color'); // —è–∫—â–æ —Ç–∞–∫–∏–π –∫–ª–∞—Å —î –≤—ñ–Ω –π–æ–≥–æ –≤–∏–¥–∞–ª–∏—Ç—å


//             * * * * * * –î–û–î–ê–Ñ–ú–û –°–¢–ò–õ–Ü
// title.style.fontSize = '50px';
// title.style.color = 'green';
// console.dir(title);


// title.hiidden = false;
// title.hiidden = true;
// console.dir(title.dataset.good); //—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ—Å—Ç—É—á–∞—Ç–∏—Å—å –¥–æ –¥–∞—Ç–∞—Å–µ—Ç

// console.dir(title.getAttribute('data-id/data-goods')); //—è–∫—â–æ –Ω–∞–º –ø–æ—Ç—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ–≥–æ—Å—å –∞—Ç—Ä–∏–±—É—Ç—É, –¥–æ—Å—Ç—É–∫—É—î–º–æ—Å—å —á–µ—Ä–µ–∑ –ø—Ä–∏—Å—Ç–∞–≤–∫—É data-...*
//  –£ edataset –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è  dataAtribute.

// const list = document.querySelector('.js-list');
// console.dir(list.children);
// console.log([...list.children]);
//–º–æ–∂–µ–º–æ —Å–ø—É—Å—Ç–∏—Ç–∏—Å—å –Ω–∞ 2 —Ä—ñ–≤–Ω—ñ –Ω–∏–∂—á–µ –º–∞–∫—Å–∏–º—É–º;


            // * * * * * * –î–û–î–ê–Ñ–ú–û –ï–õ–ï–ú–ï–ù–¢–ò (—Ç–∞–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–≤–∞–∂–∞—î—Ç—å—Å—è —Å–∫–ª–∞–¥–Ω–∏–º)

// const li = document.createElement('li');
// li.textContent = list.children.length + 1; // —Å—Ç–≤–æ—Ä—é—î–º–æ l—ñ
// li.classlist.add('title-color'); //—è–∫—â–æ –≤ li –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ class;
// li.dataset.ia = '1234'; //—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ data atribute
// const div = document.createElement('div') // —Å—Ç–∏–æ—Ä—é—î–º–æ div
// const h2 = document.createElement('h2') //—è–∫—â–æ –≤ div –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ h2
// h2.textContent = 'Hello' // –≤ h2 –¥–æ–¥–∞—î–º–æ —Ç–µ–∫—Å—Ç
// li.append(div); //—Ç–µ–ø–µ—Ä div –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –≤ li;
// div.append(h2); // —Ç–µ–ø–µ—Ä h2 –¥–æ–¥–∞—î–º–æ –≤ div
// list.append(li); //—Ç–µ–ø–µ—Ä –¥–æ–¥–∞—î–º–æ li –≤ —Å–ø–∏—Å–æ–∫ ul;–±—É–¥–µ –¥–æ–¥–∞–Ω–æ –≤ –∫—ñ–Ω–µ—Ü—å —Å–ø–∏—Å–∫—É, –ø–æ —Ç–∏–ø—É push
// console.log(li);


            // * * * * *  –ú–ï–¢–û–î –®–ê–ë–õ–û–ù–ù–ò–• –†–Ø–î–ö–Ü–í !!!!

// const li = `<li class="title-color" data-id = '1234'>${list.children.length + 1}
//     <div>
//     <h2>Hello</h2>
//     </div>
//      </li>`; // —Å—Ç–≤–æ—Ä—é—î–º–æ –ª—ñ—à–∫—É —è–∫ html –ø–æ–¥—ñ–±–Ω–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å + –ø—ñ–¥—Å—Ç–∞–≤–ª—è—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ—ó—Å—å –∑–º—ñ–Ω–Ω–æ—ó
 //list.insertAdjacentHTML("beforeend",li); // —Ç–µ–ø–µ—Ä –Ω–∞—à list –¥–æ–¥–∞—î–º–æ –≤ html –¥–æ–∫—É–º–µ–Ω—Ç, –≤–∞–∑—É—î–º–æ '–∫—É–¥–∏' –∞ –ø–æ—Ç—ñ–º '—â–æ'.
// afterbegin - –¥–æ–¥–∞—î—Ç—å—Å—è –ø–µ—Ä—à–∏–º –µ–ª–µ–º–µ–Ω—Ç–æ–º
// afterend - –¥–æ–¥–∞—î—Ç—å—Å—è –≤ —Å–∞–º–∏–π –∫—ñ–Ω–µ—Ü—å, –ø—ñ—Å–ª—è –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è
// beforebegin - –¥–æ–¥–∞—î—Ç—å—Å—è –ø–µ—Ä–µ–¥–¥ —Å–∞–º–∏–º —Å–ø–∏—Å–∫–æ–º(–ø–µ—Ä–µ–¥ ul)
// beforeend - –¥–æ–¥–∞—î—Ç—å—Å—è  –≤ –∫—ñ–Ω–µ—Ü—å —Å–ø–∏—Å–∫—É


// —è–∫—â–æ –ø—Ä–∞—Ü—é—î–º–æ —ñ–∑ —Å—Ç–≤–æ—Ä–µ–Ω–æ—é html —Ä–æ–∑–º—ñ—Ç–∫–æ—é, —Ç–æ –ø–∏—à–µ–º–æ –ø—Ä–∏—Å—Ç–∞–≤–∫—É append;
// —è–∫—â–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Ä–æ–∑–º—ñ—Ç–∫—É —Ç–æ –ø–∏—à–µ–º–æ insertAdjacentHTML


            //* * * * * *  –ñ–ò–í–ê/–ù–ï –ñ–ò–í–ê –ö–û–õ–ï–ö–¶–Ü–Ø (–°–¢–ê–¢–ò–ß–ù–ê/–î–ò–ù–ê–ú–Ü–ß–ù–ê)


// const listStatic = document.querySelectorAll('li'); //–ø–æ–≤–µ—Ä—Ç–∞—î –≤—Å—ñ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏
// const listDynamics = document.getElementsByTagName('li') // —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–±—ñ—Ä –Ω–∞—à–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —à—É–∫–∞—î–º–æ –∑–∞ –Ω–∞–∑–≤–æ—é —Ç–µ–≥—ñ–≤
// const list = document.querySelector(".js-list");
// const li = document.createElement('li'); // —Å—Ç–≤–æ—Ä–∏–º–æ li
// li.textContent = list.children.length + 1;//¬†—Ü—ñ–π li –¥–∞—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
// list.append(li); // —Ç–µ–ø–µ—Ä –ø–æ–º—ñ—â–∞—î–º–æ –≤ –Ω–∞—à —Å–ø–∏—Å–æ–∫
// console.log('listStatic', listStatic);
// console.log('listDynamics', listDynamics);

//querySelectorAll - –Ω–µ –ø–æ–∫–∞–∂–µ –∑–º—ñ–Ω, —è–∫—ñ –≤—ñ–¥–±—É–ª–∏—Å—å –ø—ñ—Å–ª—è –Ω—å–æ–≥–æ, –≤—ñ–Ω —Ñ–∞–∫—Ç–∏—á–Ω–æ –∑–∞–±–∏—Ä–∞—î —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —è–∫—ñ –±—É–ª–∏–Ω –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ó—Ö;
// getElements - –∑–∞–≤–∂–¥–∏ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –Ω–∞–º –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω–Ω—ñ




// const elements = {
//     clickMe: document.querySelector('.js-click'),
//     box: document.querySelector('.js-box'),
//     query: document.querySelector('.js-query'),
//     form: document.querySelector('.js-form')
// }

// elements.clickMe.addEventListener('click', handlerClick);
// elements.box.addEventListener('click', handlerClick);

// let step = 0;
// function handlerClick() {
//     step += 50;
//     elements.box.style.marginTop = `${step}px`;
//     elements.box.style.marginLeft = `${step}px`;
// }


// function handlerClick(evt) {
//     step += 50;
//     evt.currentTarget.style.marginTop = `${step}px`;
//     evt.currentTarget.style.marginLeft = `${step}px`;
// }



// elements.query.addEventListener('input', handlerSearch);
// // elements.query.addEventListener('blur', handlerSearch);

// function handlerSearch(evt) {
//     console.dir(evt.currentTarget);
//     console.dir(evt.currentTarget.value);
// }

// elements.form.addEventListener('submit', handlerSubmit)

// function handlerSubmit(evt) {
//     evt.preventDefault();
//     console.dir(evt.currentTarget);
//     const { comment, email, password } = evt.currentTarget.elements;

//     console.log(email);
//     console.log(password);
//     console.log(comment);
// }




// –ü–µ—Ä–µ—Ä–≤–∞ –¥–æ 21.30


// document.addEventListener('keydown', handlerKey);



// function handlerKey(evt) {
// if (evt.code === "Escape") {
//     console.log('üòÇ');
// } else {
//     console.log('üò¥');
// }
// console.log(evt.code);
//     switch (evt.code) {

//         case 'Escape':
//             console.log('Escape');
//             break;
//         case 'KeyQ':
//             console.log('Q');
//             break;
//     }
// }


// document.addEventListener('keydown', handlerKey);


// function handlerKey(evt) {
//     // if (evt.ctrlKey && evt.code === 'KeyC') {
//     //     evt.preventDefault();
//     // }


// console.log(evt);
//     if (evt.ctrlKey) {
//         switch (evt.code) {
//             case 'KeyC':
//             case 'KeyV':
//                 evt.preventDefault();
//         }
//     }
// }


// document.addEventListener('mouseup', handler)
// function handler(evt) {
//     console.log(evt);
// }



const cars = [
    {
        id: 1,
        car: "Honda",
        type: "Civic",
        price: 12000,
        img: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTTCOHzdE-dK6WK7ax8NzQolTcCWA_jhJD-CRGWfqKJIJuGs8ML_-OyiDwzsdC8jOi_K10&usqp=CAU",
    },
    {
        id: 2,
        car: "Audi",
        type: "Q7",
        price: 40000,
        img: "https://upload.wikimedia.org/wikipedia/commons/8/8b/2017_Audi_Q7_S_Line_Quattro_3.0_Front.jpg",
    },
    {
        id: 33,
        car: "BMW",
        type: "5 siries",
        price: 9000,
        img: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSUH96e58ynLO8SXMsFTNYkJci79eAZ8CyqcZsZ8snvzz2sfLl3Ojd1BQoaWBcrMKWvSYc&usqp=CAU",
    },
    {
        id: 3,
        car: "Honda",
        type: "Accord",
        price: 20000,
        number: "+380000000000",
        img: "https://upload.wikimedia.org/wikipedia/commons/7/76/2021_Honda_Accord_Sport_%28facelift%29%2C_front_11.30.21.jpg",
    },
    {
        id: 4,
        car: "Volvo",
        type: "XC60",
        price: 7000,
        img: "https://www.volvocars.com/media/shared-assets/master/images/pages/my19/xc60-my19/accessories/xc60my19_accessories_exteriorfeature2_1.jpg?w=320",
    },
];

const container = document.querySelector(".js-container"); //map –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤
const markup = cars.map(({ id = 'none', car, type, price, img }) => `<li data-id="${id}"> 
            <img src="${img}" alt="${car}" class="img">
            <h2>–ú–∞—Ä–∫–∞ - ${car}</h2>
            <h3>–ú–æ–¥–µ–ª—å - ${type}</h3>
            <p>–¶—ñ–Ω–∞ - ${price}</p>
        </li>`).join(''); // join –ø—Ä–∏–≤–æ–¥–∏—Ç—å —É —Ä—è–¥–æ–∫;
console.dir(markup);
container.insertAdjacentHTML("beforeend", markup);
// data-atribute –∑–∞–≤–∂–¥–∏ —Å—Ç–∞–≤–∏–º–æ –Ω–∞ —Å–ø—ñ–ª—å–Ω–æ–≥–æ –±–∞—Ç—å–∫–∞, –≤ –∞—à–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ü–µ li


        // * * * * *  –≤–∏–¥–∞–ª–µ–Ω–Ω—è html —Ä–æ–∑–º—ñ—Ç–∫–∏

container.insertAdjacentHTML("beforeend", markup);
const containerAfter = document.querySelector(".js-container");
[...containerAfter.children].forEach((item) => {
    if (item.CDATA_SECTION_NODE.id !== "none") {
        item.remove();
    }
});




// const elements = {
//     form: document.querySelector('.js-form'),
//     container: document.querySelector('.js-list')
// }

// function createMarkup(arr) {
//     return arr.map(({ id, car, type, price, img }) => `
//     <li data-id="${id}">
//     <img src="${img}" alt="${type}" width="300"/>
//     <h2>${car}</h2>
//     <h3>${type}</h3>
//     <span>${price}</span>
//   </li>`).join('')
// }

// elements.container.style.display = 'flex';
// elements.container.style.flexWrap = 'wrap';
// elements.container.style.gap = '25px';
// elements.container.insertAdjacentHTML('beforeend', createMarkup(cars))
// elements.form.addEventListener('submit', handlerSearch);

// function handlerSearch(evt) {
//     evt.preventDefault();

//     const { options, query } = evt.currentTarget.elements;
//     console.log(options.value);

//     const result = cars.filter((item) => item[options.value].toLowerCase().includes(query.value.toLowerCase()))
//         .sort((a, b) => a[options.value].localeCompare(b[options.value]));

//     elements.container.innerHTML = createMarkup(result);
// }




















